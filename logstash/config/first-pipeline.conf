input {
    beats {
        port => "5043"
    }
}
filter {  
    csv {
        columns => ["e2","Chargeback Date Stamp","Brand","Dept","MBOL Number","Type of Freight Movement","Scac","Cust PO","Order Level Chargeback","MANU Cartons","MANU Pallets","MANU Weight","Origin Id","Origin Name","Origin Address","Origin City","Origin State","Origin Code","Origin Zip", "Destination Id","Destination Name","Destination Address","Destination City","Destination State","Destination Code","Destination Zip","Category","BLANK"]
        convert => { 
                    "Chargeback Date Stamp" => "date"
                    "Origin Zip" => "integer"                
                    "MANU Cartons" => "integer"
                    "MANU Pallets" => "integer"
                    "MANU Weight" => "float"
                    "Order Level Chargeback" => "float"                    
        }
        add_field => { "Brand-Dept" => "%{Brand}%{Dept}" }
    }
    date {
        match => [ "e2", "M/d/yy" ]
        timezone => "America/New_York"
    }

    # Match the zipcodes with lat/lon from yaml file
    translate {
        field => "Origin Zip"
        dictionary_path => "/etc/logstash/conf.d/US_zipcode_to_geopoint.yaml"
    }
    mutate {
        gsub => [
            # remove spaces
            "translation", " ", ""
        ]
        #split them into an array
        split => {"translation" => ","}
    }
    mutate {
        add_field => ["latitude","%{[translation[0]}"]
        add_field => ["longitude","%{[translation[1]}"]
    }
    mutate {
        convert => { "latitude" => "float" }
        convert => { "longitude" => "float" }
    }

    # Rename them
    mutate {
        rename => {
            "latitude" => "[location][lat]"
            "longitude" => "[location][lon]"
        }
    }
}

output {
    elasticsearch {
        hosts => [ "elasticsearch:9200" ]
        user => "elastic"
		password => "changeme"
        action => "index"
        index => "chargebacks"
        manage_template => true
        template => "/etc/logstash/conf.d/US_zipcode_to_geopoint.yaml"
        template_overwrite => "true"
    }
    stdout { codec => rubydebug }
}




